name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build release binary
        run: cargo build --release

      - name: Package (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          mkdir -p dist
          cp target/release/mdcode dist/
          cp readme.md dist/ || true
          cp LICENSE dist/ || true
          tar -czf mdcode-${{ github.ref_name }}-linux-x86_64.tar.gz -C dist mdcode readme.md LICENSE || tar -czf mdcode-${{ github.ref_name }}-linux-x86_64.tar.gz -C dist mdcode
          mkdir -p upload
          mv mdcode-${{ github.ref_name }}-linux-x86_64.tar.gz upload/

      - name: Package (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item -Path target/release/mdcode.exe -Destination dist/
          if (Test-Path readme.md) { Copy-Item readme.md dist/ }
          if (Test-Path LICENSE) { Copy-Item LICENSE dist/ }
          Compress-Archive -Path dist/* -DestinationPath mdcode-${{ github.ref_name }}-windows-x86_64.zip
          New-Item -ItemType Directory -Force -Path upload | Out-Null
          Move-Item mdcode-${{ github.ref_name }}-windows-x86_64.zip upload/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: upload/*

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List artifacts
        run: ls -R dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/**/*.tar.gz
            dist/**/*.zip
