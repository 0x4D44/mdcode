#!/usr/bin/env bash
set -euo pipefail

# Open the most recent HTML coverage report generated by `make coverage-html`.
# Usage: scripts/open_coverage_html.sh [--dry-run]

here="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
root="$(cd "$here/.." && pwd)"
out_dir="$root/target/coverage/html"
dry_run=0
if [[ ${1:-} == "--dry-run" ]]; then dry_run=1; fi

ensure_report() {
  if [[ ! -d "$out_dir" ]] || ! find "$out_dir" -name index.html -print -quit >/dev/null 2>&1; then
    make -s -C "$root" coverage-html >/dev/null
  fi
}

find_index() {
  # Prefer deepest index.html if nested (cargo llvm-cov may nest html/html)
  local idx
  idx="$(find "$out_dir" -type f -name index.html | sort | tail -n1 || true)"
  if [[ -z "$idx" ]]; then
    echo "No HTML coverage report found under $out_dir" >&2
    exit 1
  fi
  echo "$idx"
}

open_path() {
  local path="$1"
  if [[ $dry_run -eq 1 ]]; then
    echo "$path"
    exit 0
  fi
  case "$(uname -s)" in
    Darwin)
      open "$path" || true ;;
    Linux)
      if command -v wslview >/dev/null 2>&1; then wslview "$path" || true; fi
      xdg-open "$path" 2>/dev/null || sensible-browser "$path" 2>/dev/null || echo "$path" ;;
    MINGW*|MSYS*|CYGWIN*)
      cmd.exe /c start "" "$(echo "$path" | sed 's#/#\\\\#g')" || echo "$path" ;;
    *)
      echo "$path" ;;
  esac
}

ensure_report
index_html="$(find_index)"
open_path "$index_html"

